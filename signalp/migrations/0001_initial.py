# Generated by Django 5.2.1 on 2025-05-19 14:32

import django.db.models.deletion
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='DomainStatisticsPerTaxon',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('gtdb_taxonomy_string', models.TextField()),
                ('gtdb_taxonomy_last', models.CharField(max_length=100)),
                ('gtdb_taxonomy_rank', models.CharField(blank=True, max_length=20, null=True)),
                ('source', models.CharField(choices=[('mist', 'MiST database'), ('rmodels', 'Pfam models with relaxed thresholds')], max_length=7)),
                ('protein_type', models.CharField(choices=[('HK', 'Histidine Kinase'), ('rr', 'Response Regulator'), ('ocs', 'One-Component System')], max_length=3)),
                ('domains', models.TextField()),
                ('domain_combination_type', models.TextField(blank=True, null=True)),
                ('count_raw', models.IntegerField(blank=True, null=True)),
                ('count_normalized_by_total_genomes', models.DecimalField(blank=True, decimal_places=5, max_digits=10, null=True)),
                ('count_normalized_by_genome_size_by_total_genomes', models.DecimalField(blank=True, decimal_places=5, max_digits=10, null=True)),
                ('count_normalized_by_total_proteins_by_total_genomes', models.DecimalField(blank=True, decimal_places=5, max_digits=10, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='GenomeMetadata',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('genome_version', models.CharField(max_length=100, unique=True)),
                ('genome_accession', models.CharField(blank=True, max_length=100, null=True)),
                ('genome_size', models.IntegerField(blank=True, null=True)),
                ('protein_count', models.IntegerField(blank=True, null=True)),
                ('gtdb_kingdom', models.CharField(blank=True, max_length=100, null=True)),
                ('gtdb_phylum', models.CharField(blank=True, max_length=100, null=True)),
                ('gtdb_class', models.CharField(blank=True, max_length=100, null=True)),
                ('gtdb_order', models.CharField(blank=True, max_length=100, null=True)),
                ('gtdb_family', models.CharField(blank=True, max_length=100, null=True)),
                ('gtdb_genus', models.CharField(blank=True, max_length=100, null=True)),
                ('gtdb_species', models.CharField(blank=True, max_length=100, null=True)),
                ('ncbi_kingdom', models.CharField(blank=True, max_length=100, null=True)),
                ('ncbi_phylum', models.CharField(blank=True, max_length=100, null=True)),
                ('ncbi_class', models.CharField(blank=True, max_length=100, null=True)),
                ('ncbi_order', models.CharField(blank=True, max_length=100, null=True)),
                ('ncbi_family', models.CharField(blank=True, max_length=100, null=True)),
                ('ncbi_genus', models.CharField(blank=True, max_length=100, null=True)),
                ('ncbi_species', models.CharField(blank=True, max_length=100, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='DomainStatisticsPerProtein',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('genome_accession', models.CharField(blank=True, max_length=100, null=True)),
                ('ncbi_protein_accession', models.CharField(blank=True, max_length=100, null=True)),
                ('mist_protein_accession', models.CharField(max_length=100, unique=True)),
                ('protein_type', models.CharField(choices=[('HK', 'Histidine Kinase'), ('rr', 'Response Regulator'), ('ocs', 'One-Component System')], max_length=3)),
                ('source', models.CharField(choices=[('mist', 'MiST database'), ('rmodels', 'Pfam models with relaxed thresholds')], max_length=7)),
                ('protein_length', models.IntegerField(blank=True, null=True)),
                ('domain_architecture', models.TextField(blank=True, null=True)),
                ('sensors_or_regulators', models.TextField(blank=True, null=True)),
                ('domain_counts', models.JSONField(blank=True, null=True)),
                ('domain_combination', models.JSONField(blank=True, null=True)),
                ('genome', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='signalp.genomemetadata', to_field='genome_version')),
            ],
        ),
        migrations.CreateModel(
            name='TaxonGenomeLink',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('genome', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='signalp.genomemetadata')),
                ('taxon', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='signalp.domainstatisticspertaxon')),
            ],
        ),
        migrations.AddField(
            model_name='domainstatisticspertaxon',
            name='genomes',
            field=models.ManyToManyField(related_name='mist_taxon_statistics', through='signalp.TaxonGenomeLink', to='signalp.genomemetadata'),
        ),
        migrations.CreateModel(
            name='DomainStatisticsPerGenome',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('genome_accession', models.CharField(blank=True, max_length=100, null=True)),
                ('source', models.CharField(choices=[('mist', 'MiST database'), ('rmodels', 'Pfam models with relaxed thresholds')], max_length=7)),
                ('protein_type', models.CharField(choices=[('HK', 'Histidine Kinase'), ('rr', 'Response Regulator'), ('ocs', 'One-Component System')], max_length=3)),
                ('domains', models.TextField()),
                ('domain_combination_type', models.TextField(blank=True, choices=[('domain', 'Domain'), ('domain_comb', 'Domain Comb'), ('superfamily', 'Superfamily'), ('superfamily_comb', 'Superfamily Comb')], null=True)),
                ('count_raw', models.IntegerField(blank=True, null=True)),
                ('count_normalized_by_genome_size', models.DecimalField(blank=True, decimal_places=5, max_digits=10, null=True)),
                ('count_normalized_by_total_proteins', models.DecimalField(blank=True, decimal_places=5, max_digits=10, null=True)),
                ('genome', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='signalp.genomemetadata', to_field='genome_version')),
            ],
            options={
                'unique_together': {('genome', 'protein_type', 'domains')},
            },
        ),
        migrations.AlterUniqueTogether(
            name='domainstatisticspertaxon',
            unique_together={('gtdb_taxonomy_string', 'protein_type', 'domains')},
        ),
    ]
